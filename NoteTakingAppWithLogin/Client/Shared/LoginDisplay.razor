@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using NoteTakingAppWithLogin.Shared
@inject NavigationManager Navigation
@inject HttpClient Http
@inject AuthenticationStateProvider AuthenticationStateProvider

<AuthorizeView>
    <Authorized>
        
            <div>
            <div @onclick="GoToHomePage" class="logo"><i class="oi oi-book" style="color:white;"></i><span>NOTEPAD+++</span></div>
            </div>
            <div style="display:flex; flex-direction:row;">
            <div><button class="navbar-button" @onclick="GoToProfile">@context.User.Identity?.Name!</button></div>
            <div><button class="navbar-button" @onclick="BeginLogOut">LOG OUT</button></div>
            </div>
        
        
    </Authorized>
    <NotAuthorized>
        <div>
            <div @onclick="GoToHomePage" class="logo"><i class="oi oi-book" style="color:white;"></i><span>NOTEPAD+++</span></div>
        </div>
        <div style="display:flex; flex-direction:row;">
            <div><button class="navbar-button" @onclick="Register">REGISTER</button></div>
            <div><button class="navbar-button" @onclick="Login">LOG IN</button></div>
        </div>
    </NotAuthorized>
</AuthorizeView>

@code{



    private void BeginLogOut()
    {
        Navigation.NavigateToLogout("authentication/logout");
    }

    private void GoToProfile()
    {
        Navigation.NavigateTo("authentication/profile");
    }

    private void GoToHomePage()
    {
        Navigation.NavigateTo("/");
    }

    private void Login()
    {
        Navigation.NavigateTo("authentication/login");
    }

    private void Register()
    {
        Navigation.NavigateTo("authentication/register");
    }

    

    List<UserNote> notes = new List<UserNote>();
    
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;
        if (user != null && user.IsAuthenticated)
        {
            var result = await Http.GetFromJsonAsync<List<UserNote>>("api/usernote");
            notes = result;
            
            Console.WriteLine("USER REPLY: " + user);
        }

    }

    
}
