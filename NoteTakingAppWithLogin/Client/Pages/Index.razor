@page "/"
@using NoteTakingAppWithLogin.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider

<PageTitle>NOTEPAD+++</PageTitle>

@if (loggedinstate == "YES"){
    
}else{
    <h2>PLEASE LOG IN</h2>
}


@if (notes.Count <= 0)
{
    <p>LOADING........</p>
}
else
{
    <div class="note-container p-3">

        @foreach (var note in notes)
        {
            <div @onclick="(() => EditNote(note.Id))">
                <div class="note-summary" >
                    @* <div class="p-3">@game.Id</div> *@
                    <div id="top-note-summary" class="p-3">
                        <b>@note.Title</b>
                    </div>
                    <div id="middle-note-summary" class="p-3">
                        @note.Content
                    </div>
                    <div id="bottom-note-summary">
                        <div class="p-3">@note.Tag</div>
                        <div class="p-3">@note.ReleaseDate.ToString("MM/dd/yyyy")</div>
                    </div>
                </div>
            </div> 
        }
    </div>
}
@code{
    List<UserNote> notes = new List<UserNote>();
    string loggedinstate = "NO";
    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateProvider.GetAuthenticationStateAsync()).User.Identity;
        if (user != null && user.IsAuthenticated)
        {
            var result = await Http.GetFromJsonAsync<List<UserNote>>("api/usernote");
            notes = result;
            loggedinstate = "YES";
            Console.WriteLine("USER REPLY: " + user);
        }
       
    }

    void AddNote()
    {
        NavigationManager.NavigateTo("/note");
    }

    void EditNote(int Id)
    {
        NavigationManager.NavigateTo($"/note/{Id}");
    }

}
